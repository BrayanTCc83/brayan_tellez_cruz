---
import Header from "../components/Header.astro";
import { SPANISH, ENGLISH } from "../utils/langs";

import NotificationsES from "../data/es/translation.json";
import NotificationsEN from "../data/en/translation.json";
import NotificationsZH from "../data/zh/translation.json";

import type { INotifications } from "../interface/LangSupport";

const { lang, includes, title, ads, notifications } = { 
	title: '',
	includes: [],
	lang: SPANISH,
	ads: true,
	notifications: false,
	...Astro.props
};

const seo = Astro.props.seo;

const greatings: INotifications = lang === SPANISH ? NotificationsES.notifications : 
	lang === ENGLISH ? NotificationsEN.notifications : NotificationsZH.notifications;
---

<html lang={lang}>
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<meta name="robots" content="index, follow">
		
		<meta name="google-adsense-account" content="ca-pub-1637045513206697">

		{
			seo ?
				<Fragment>
					<meta name="description" content={seo.description} />
					<meta name="keywords" content={`brayan tellez, programación, educación, aprendizaje, ${seo.title}, ${(seo.keywords??[]).join(',')}`} />
					<meta name="author" content="Brayan Téllez" />
					<meta property="og:title" content={seo.og.title} />
					<meta property="og:description" content={seo.og.description} />
					<meta property="og:type" content={seo.og.type} />
					<meta property="og:url" content={seo.og.url} />
					<meta property="og:image" content={seo.og.image} />
					<meta property="og:locale" content={lang === SPANISH ? 'es_MX' : lang === ENGLISH ? 'en_US' : 'zh_CN'} />

					<meta name="twitter:card" content="summary_large_image" />
					<meta name="twitter:title" content={seo.twitter.title} />
					<meta name="twitter:description" content={seo.twitter.description} />
					<meta name="twitter:image" content={seo.twitter.image} />

					<link rel="canonical" href={seo.canonical.url} />
				</Fragment>
			: null
		}

		<link rel="sitemap" href="/sitemap-index.xml" />

        <link rel="stylesheet" href="/styles/global.css">
		{ includes.map( ( i: string ) => <link rel="stylesheet" href={`/styles/${i}.css`} set:html/> ) }
  		<link rel="icon" type="image/x-icon" href="/assets/logotipe/icon_bpp_colour.ico">

		<title>{title}</title>
	</head>
	<body id="root">
        <Header lang={lang}/>
        <slot/>
	</body>
	<script set:html={`const greatings = ${JSON.stringify(greatings.greatings)}`}></script>
	{
		notifications ? 
			<script type="module">
				let yaSolicitado = false;

				const activarNotificaciones = async () => {
					if (yaSolicitado) return;
					yaSolicitado = true;
			
					const { EnableNotifications } = await import("/scripts/notifications.js");
					EnableNotifications(greatings);

					window.removeEventListener("touchstart", activarNotificaciones);
					window.removeEventListener("mousedown", activarNotificaciones);
					window.removeEventListener("click", activarNotificaciones);
				};

				window.addEventListener("touchstart", activarNotificaciones, { once: true });
				window.addEventListener("click", activarNotificaciones, { once: true });
				window.addEventListener("mousedown", activarNotificaciones, { once: true });
			</script>
		: null
	}
</html>