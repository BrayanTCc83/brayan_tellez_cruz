---
import Template from "../../../template/Template.astro";
import PostFragment from "../../../components/article/PostFragment.astro";
import Breadcrumb from "../../../components/Breadcrumb.astro";

import Blogs from "../../../../public/assets/blogs/blogs.json";
import { GetBlog } from "../../../api/blogs";

export async function getStaticPaths() {
  return Blogs.flatMap( id => [ 'es', 'en', 'ch' ].map( lang => ({ params: { lang, id: id.id } })) );
}

const { lang, id } = Astro.params;
const { title, subtitle, creation_date, update_date, author, duration, poster, fragments } = await GetBlog({ lang, id });
const routes = [
  { text: 'Brayan Téllez', href: '/' },
  { text: 'Blog', href: `/${lang}/blogs` },
  { text: title, href: `/${lang}/blog/${id}` }
];
---
<Template includes={['blogpost']} lang={lang} title={`Brayan Téllez | ${title}`}>
    <Breadcrumb routes={routes}/>
    <article id="main" itemscope itemtype="https://schema.org/BlogPosting">
        <h1 itemprop="headline">{title}</h1>
        <meta itemprop="datePublished" content={creation_date}>
        <meta itemprop="dateModified" content={update_date}>
        
        <h2 itemprop="description">{subtitle}</h2>
        
        <div itemprop="author" itemscope itemtype="https://schema.org/Person">
          <span itemprop="name">{author}</span>
        </div>
        <span class="extra">Duración de lectura: {duration} minutos.</span>
        <span class="extra">Fecha de creación: {update_date}.</span>

        <meta itemprop="timeRequired" content={`PT${duration}M`}>
        <img src={`/assets/blogs/${id}/${poster}`} alt="No encontrado" class="poster">

        <main itemprop="articleBody">
            {
                (fragments??[]).map( fragment => 
                    <PostFragment {...fragment} id={id}/>
                )
            }
        </main>
    </article>
</Template>