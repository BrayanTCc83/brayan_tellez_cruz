---
import Carousel from "../../../components/react/Carousel.tsx";
import Comment from "../../../components/conversation/Comment.astro";
import Breadcrumb from "../../../components/Breadcrumb.astro";

import Projects from "../../../../public/assets/projects/projects.json";
import Header from "../../../components/Header.astro";

import { GetProject, GetProjectImages } from "../../../api/projects";
import { getIconData } from "../../../utils/getIconData";

export async function getStaticPaths() {
  return Projects.flatMap( id => [ 'es', 'en', 'ch' ].map( lang => ({ params: { lang, id: id } })) );
}

const { lang, id } = Astro.params;
const { title, subtitle, description, date, author, cover, technologies, website, isPublic, code, projectUrl, objectives, clients, comments } = await GetProject({ lang, id });
const routes = [
  { text: 'Brayan Téllez', href: '/' },
  { text: 'Proyectos', href: `${lang}/proyectos` },
  { text: title, href: `${lang}/proyectos/${id}` }
];
const images = await GetProjectImages({ id });
---
<!DOCTYPE html>
<html lang={lang}>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <meta name="description" content={subtitle}>
    <meta name="author" content={author} />

    <meta property="og:title" content={title} />
    <meta property="og:description" content={subtitle} />
    <meta property="og:image" content={cover} />
    <meta property="og:type" content={website} />

    <meta name="twitter:card" content="summary_large_image"/>
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={subtitle} />
    <meta name="twitter:image" content={cover} />

    <link rel="stylesheet" href="/styles/global.css">
    <link rel="stylesheet" href="/styles/carousel.css">
    <link rel="stylesheet" href="/styles/project.css">
    <link rel="stylesheet" href="/styles/lang-buttons.css">
    <link rel="stylesheet" href="/styles/blogpost.css">
    
    <title>Brayan Téllez | {title}</title>
</head>
<body id="root">
    <Header lang={lang}/>
    <Breadcrumb routes={routes}/>
    <main id="main">
        <h1 itemprop="headline">{title}</h1>
        <h2>{subtitle}</h2>
        <article itemscope itemtype="https://schema.org/CreativeWork">
            <meta itemprop="name" content={title} />
            <meta itemprop="author" content={author} />
            <meta itemprop="datePublished" content={date} />
            <meta itemprop="image" content={cover}/>

            <h3>Sobre el proyecto.</h3>
            <p itemprop="description">
                {
                    (description??[]).map(d => <p>{d}</p>)
                }
            </p>

            <h3>Galería.</h3>
            <section itemprop="image">
                <Carousel images={images} client:only="react"/>
            </section>

            <section>
                <h3>Objetivos del proyecto.</h3>
                <ul>
                    { objectives.map( objective => <li>{objective}</li> ) }
                </ul>
            </section>
    
            {
                isPublic ? <>
                    <h3>Enlaces</h3>
                    <ul>
                        {code ? <li><a href={code}>Código en GitHub</a></li> : null}
                        {projectUrl ? <li><a href={projectUrl}>Ver Proyecto</a></li> : null}
                    </ul>
                </> : null
            }

            {
                comments.length > 0 ?
                    <section>
                        <h3>Comentarios</h3>
                        <div class="comments-container">
                            {
                                comments.map( comment => <Comment {...comment}/> )
                            }
                        </div>
                    </section>
                :null
            }

            <section>
                <h3>Tecnologías utilizadas</h3>
                <div class="techs">
                    {
                        technologies.map( tech => {
                            const data = getIconData(tech);
                            return <button class={`tag button-lang ${tech}`}>
                                <Fragment set:html={data.svg}/>
                                <span>{data.name}</span>
                            </button>
                        })
                    }
                </div>
            </section>

            {
                clients.length > 0 ?
                    <section>
                        <h3>Clientes</h3>
                        <div class="techs">
                            {
                                clients.map( ({ description, logotipe, name }) =>
                                    <figure title={description}>
                                        <img src={logotipe} alt="Logotipo del cliente no encontrada."/>
                                        <figcaption>{name}</figcaption>
                                    </figure>
                                )
                            }
                        </div>
                    </section>
                :null
            }
            <footer>
              <p>Publicado el <time datetime={date} itemprop="datePublished">{date}</time> por <span itemprop="author">{author}</span>.</p>
            </footer>
        </article>
    </main>
    <article id="main">
</body>
</html>