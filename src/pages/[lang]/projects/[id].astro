---
import LinkedIn from "/assets/icons/LinkedIn.svg?raw";
import Youtube from "/assets/icons/Youtube.svg?raw";
import GitHub from "/assets/icons/GitHub.svg?raw";

import Icon from "/assets/logotipe/icon_bpp_colour.svg?raw";

import LanguageController from "../../../components/LanguageController.astro";
import Comment from "../../../components/conversation/Comment.astro";
import Breadcrumb from "../../../components/Breadcrumb.astro";
import Carousel from "../../../components/react/Carousel.tsx";

import Projects from "../../../../public/assets/projects/projects.json";
import Header from "../../../components/Header.astro";

import ProjectDetailsES from "../../../data/es/translation.json";
import ProjectDetailsEN from "../../../data/en/translation.json";
import ProjectDetailsCH from "../../../data/ch/translation.json";

import { GetProject, GetProjectImages } from "../../../api/projects";
import { getIconData } from "../../../utils/getIconData";

import type { IProjectDetailsTranslation } from "../../../interface/AppLangs";

export async function getStaticPaths() {
  return Projects.flatMap( id => [ 'es', 'en', 'ch' ].map( lang => ({ params: { lang, id: id } })) );
}

const { lang, id } = Astro.params;
const {
    title,
    subtitle,
    description,
    date,
    author,
    cover,
    technologies,
    website,
    isPublic,
    code,
    projectUrl,
    objectives,
    clients,
    comments,
    realization
} = await GetProject({ lang, id });
const images = await GetProjectImages({ id });

const translate: IProjectDetailsTranslation = lang === 'es' ? ProjectDetailsES.project_details 
    : lang === 'en' ? ProjectDetailsEN.project_details : ProjectDetailsCH.project_details;
const routes = [
  { text: 'Brayan Téllez', href: '/' },
  { text: translate.section, href: `/${lang}/projects` },
  { text: title, href: `/${lang}/projects/${id}` }
];
---
<!DOCTYPE html>
<html lang={lang}>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <meta name="description" content={subtitle}>
    <meta name="author" content={author} />

    <meta property="og:title" content={title} />
    <meta property="og:description" content={subtitle} />
    <meta property="og:image" content={cover} />
    <meta property="og:type" content={website} />

    <meta name="twitter:card" content="summary_large_image"/>
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={subtitle} />
    <meta name="twitter:image" content={cover} />

    <link rel="stylesheet" href="/styles/global.css">
    <link rel="stylesheet" href="/styles/carousel.css">
    <link rel="stylesheet" href="/styles/project.css">
    <link rel="stylesheet" href="/styles/lang-buttons.css">
    <link rel="stylesheet" href="/styles/blogpost.css">
    
    <link rel="icon" type="image/x-icon" href="/assets/logotipe/icon_bpp_colour.ico">
    
    <title>Brayan Téllez | {title}</title>
</head>
<body id="root">
    <Header lang={lang}/>
    <Breadcrumb routes={routes}/>
    <LanguageController lang={lang}/>
    <main id="main">
        <h1 itemprop="headline">
            <Fragment set:html={Icon}/>
            {title}
        </h1>
        <h2>{subtitle}</h2>
        <div class="profile">
            <p>
                {translate.date}:
                <b>{ realization }</b>
                <br>
            </p>
            <article>
                <p>
                    <b>Brayan Téllez Cruz</b>
                    <br>
                    <span>Frontent Developer</span>
                </p>
                <img src="/assets/images/me/brayan.webp" alt="Imagen Brayan Tellez." width="100px" height="100px">
            </article>
        </div>
        <article itemscope itemtype="https://schema.org/CreativeWork">
            <meta itemprop="name" content={title} />
            <meta itemprop="author" content={author} />
            <meta itemprop="datePublished" content={date} />
            <meta itemprop="image" content={cover}/>

            <h3>{translate.about}</h3>
            <p itemprop="description">
                {
                    (description??[]).map(d => <p set:html={d}></p>)
                }
            </p>

            <h3>{translate.galery}</h3>
            <section itemprop="image">
                <Carousel images={images} client:only="react"/>
            </section>

            <section>
                <h3>{translate.objectives}</h3>
                <ul>
                    { objectives.map( objective => <li>{objective}</li> ) }
                </ul>
            </section>
    
            {
                isPublic ? <section>
                    <h3>{translate.links}</h3>
                    <ul>
                        {code ? <li><a href={code}>Código en GitHub</a></li> : null}
                        {projectUrl ? <li><a href={projectUrl}>Ver Proyecto</a></li> : null}
                    </ul>
                </section> : null
            }

            <section>
                <h3>{translate.technlologies}</h3>
                <div class="techs">
                    {
                        technologies.map( tech => {
                            const data = getIconData(tech);
                            return <button class={`tag button-lang ${tech}`}>
                                <Fragment set:html={data.svg}/>
                                <span>{data.name}</span>
                            </button>
                        })
                    }
                </div>
            </section>
            {
                comments.length > 0 ?
                    <section>
                        <h3>{translate.comments}</h3>
                        <div class="comments-container">
                            {
                                comments.map( comment => <Comment {...comment}/> )
                            }
                        </div>
                    </section>
                :null
            }
            {
                clients.length > 0 ?
                    <section>
                        <h3>{translate.clients}</h3>
                        <div class="clients">
                            {
                                clients.map( ({ description, logotipe, name, portal }) =>
                                    <figure title={description}>
                                        {
                                            portal ? <a target="_blank" href={portal}></a> : null
                                        }
                                        <img src={logotipe} alt={`Logotipo de cliente ${name}.`} width="200px" height="200px"/>
                                        <figcaption>{name}</figcaption>
                                    </figure>
                                )
                            }
                        </div>
                    </section>
                :null
            }
            <footer>
              <p>{translate.publish}<time datetime={date} itemprop="datePublished">{date}</time>. <span itemprop="author">{author}</span>.</p>
            </footer>
        </article>
    </main>
    <footer class="data">
        <p>&copy; 2025 Brayan Téllez Cruz - Todos los derechos reservados.</p>
        
        <div class="tags">
        <a itemprop="sameAs" class={`tag button-lang linkedin`} href="https://www.linkedin.com/in/brayan-t%C3%A9llez-cruz-mx/">
            <Fragment set:html={LinkedIn}/>
            <span>LinkedIn</span>
        </a>
        <a itemprop="sameAs" class={`tag button-lang youtube`} href="https://www.youtube.com/@bpp_mx">
            <Fragment set:html={Youtube}/>
            <span>Youtube</span>
        </a>
        <a itemprop="sameAs" class={`tag button-lang github`} href="https://github.com/BrayanTCc83">
            <Fragment set:html={GitHub}/>
            <span>GitHub</span>
        </a>
        </div>
    </footer>
</body>
</html>